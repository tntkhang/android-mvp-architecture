apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.github.tntkhang.mvptemplate"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField "int", "LIMIT", "100"
        buildConfigField "String", "BASEURL", "\"https://jsonplaceholder.typicode.com/\""
        buildConfigField "int", "CACHETIME", "432000" // 5days
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        abortOnError false
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue "string", "app_name", "MVPTemplate"
        }

        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "MVPTemplate (debug)"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:27.1.1"
    implementation "com.android.support.constraint:constraint-layout:1.1.2"
    implementation "com.android.support:design:27.1.1"
    implementation "com.android.support:recyclerview-v7:27.1.1"
    implementation "com.android.support:cardview-v7:27.1.1"
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation "junit:junit:4.12"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:multidex:1.0.3'

    // Glide
    implementation "com.github.bumptech.glide:glide:4.7.1"
    implementation "com.google.code.gson:gson:2.8.2"

    // Retrofit & OkHttp
    implementation "com.squareup.retrofit2:retrofit:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.8.0"

    // Dagger
    implementation "com.google.dagger:dagger:2.15"
    implementation "com.google.dagger:dagger-android:2.15"
    implementation "com.google.dagger:dagger-android-support:2.15"
    annotationProcessor "com.google.dagger:dagger-compiler:2.15"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.15"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    // SharePreferences
    implementation 'com.github.tntkhang:preferences-helper:1.3.2'
    implementation 'com.github.tntkhang:full-screen-image-view-library:1.1.1'

    //Butter Knife
    implementation "com.jakewharton:butterknife:8.8.1"
    annotationProcessor "com.jakewharton:butterknife-compiler:8.8.1"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.1.4"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"

    // Timber
    debugImplementation "com.squareup.leakcanary:leakcanary-android:1.5.4"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.5.4"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.5.4"

    // Unit sdp ssp
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    // Room
    implementation "android.arch.persistence.room:rxjava2:1.1.1"
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"

    //Maps
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.google.android.gms:play-services-places:15.0.1'
    implementation 'com.google.android.gms:play-services-location:15.0.1'

    // Firebase Notification
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-messaging:17.1.0'

    // check permission device
    implementation 'com.karumi:dexter:5.0.0'

    implementation 'com.github.pwittchen:infinitescroll:0.0.1'



    // HTTP Inspector
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'
}


Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('KEY_ALIAS') && props.containsKey('PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
